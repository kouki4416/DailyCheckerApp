plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'com.google.gms.google-services'
    id 'com.google.android.gms.oss-licenses-plugin'
}

android {
    namespace 'com.pyunku.dailychecker'
    compileSdk 33

    defaultConfig {
        applicationId "com.pyunku.dailychecker"
        minSdk 26
        targetSdk 33
        versionCode 3
        versionName "1.0.2"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation":"$projectDir/schemas".toString(),
                        "room.incremental":"true",
                        "room.expandProjection":"true"]
            }
        }
    }

    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())

    // This config should be before buildTypes
    signingConfigs {
        release{
            storeFile file(System.getenv("HOME")+"/keystores/upload-keystore.jks")
            storePassword properties.getProperty("RELEASE_STORE_PASSWORD")
            keyAlias properties.getProperty("RELEASE_KEY_ALIAS")
            keyPassword properties.getProperty("RELEASE_KEY_PASSWORD")
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.3.1'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    implementation "androidx.core:core-ktx:$core_version"
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.compose.runtime:runtime-livedata:$compose_version"
    //implementation "io.insert-koin:koin-android:$koinVersion"
    implementation "androidx.activity:activity-compose:$activity_compose_version"
    implementation "androidx.navigation:navigation-compose:$nav_version"

    // In app review
    implementation "com.google.android.play:review:$in_app_review_version"
    implementation "com.google.android.play:review-ktx:$in_app_review_version"

    // Material3
    implementation "androidx.compose.material3:material3:$material3_version"
    implementation "androidx.compose.material:material-icons-extended:$compose_version"
    implementation "androidx.compose.material3:material3-window-size-class:$material3_version"

    // Coroutine
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4"

    // Datastore
    implementation "androidx.datastore:datastore:$datastore_version"
    implementation "androidx.datastore:datastore-preferences:$datastore_version"

    // Room
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // AdMob
    implementation "com.google.android.gms:play-services-ads:$admob_version"

    // Firebase
    implementation platform('com.google.firebase:firebase-bom:31.0.1')
    implementation 'com.google.firebase:firebase-analytics'

    // Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    kapt 'androidx.hilt:hilt-compiler:1.0.0'
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0'

    // Local unit test
    testImplementation "junit:junit:$junit_version"
    testImplementation "org.hamcrest:hamcrest-all:$hamcrest_version"
    testImplementation "androidx.arch.core:core-testing:$arch_testing_version"
    testImplementation "org.robolectric:robolectric:$robolectric_version"
    testImplementation ("org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version") {
        // https://github.com/Kotlin/kotlinx.coroutines/tree/master/kotlinx-coroutines-debug#debug-agent-and-android
        exclude group: "org.jetbrains.kotlinx", module: "kotlinx-coroutines-debug"
    }

    // Instrumented unit test
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    androidTestImplementation "androidx.test.ext:junit-ktx:$junit_ktx_version"
    androidTestImplementation "androidx.test:core:$test_core_version"
    androidTestImplementation "org.mockito:mockito-core:$mockito_version"
    androidTestImplementation "androidx.test:core-ktx:$test_core_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    androidTestImplementation("org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version") {
        // https://github.com/Kotlin/kotlinx.coroutines/tree/master/kotlinx-coroutines-debug#debug-agent-and-android
        exclude group: "org.jetbrains.kotlinx", module: "kotlinx-coroutines-debug"
    }

    // AndroidX Test - JVM testing
//    testImplementation "androidx.test:core-ktx:$androidX_test_core_version"
//    testImplementation "androidx.test.ext:junit:$androidX_test_ext_kotlin_runner_version"

    // AndroidX Test - Instrumented testing
    androidTestImplementation "androidx.test.ext:junit:$androidX_test_ext_kotlin_runner_version"
    //These espresso has problem, so remove for now
//    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
//    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espresso_version"
    androidTestImplementation "androidx.arch.core:core-testing:$arch_testing_version"

    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"

    // Calendar api
    implementation "io.github.boguszpawlowski.composecalendar:composecalendar:0.6.0"

    // OSS Licenses
    implementation 'com.google.android.gms:play-services-oss-licenses:17.0.0'

    // Setting Compose
    implementation 'com.github.alorma:compose-settings-ui-m3:0.13.0'
}